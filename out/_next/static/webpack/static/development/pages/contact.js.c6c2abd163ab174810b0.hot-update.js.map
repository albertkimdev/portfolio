{"version":3,"file":"static/webpack/static\\development\\pages\\contact.js.c6c2abd163ab174810b0.hot-update.js","sources":["webpack:///./node_modules/react-typeform-embed/lib/ReactTypeformEmbed/index.js","webpack:///./node_modules/react-typeform-embed/lib/index.js","webpack:///./pages/contact.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _embed = require('@typeform/embed');\n\nvar typeformEmbed = _interopRequireWildcard(_embed);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar styleDefault = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  overflow: 'hidden'\n};\n\nvar ReactTypeformEmbed = function (_Component) {\n  _inherits(ReactTypeformEmbed, _Component);\n\n  function ReactTypeformEmbed() {\n    _classCallCheck(this, ReactTypeformEmbed);\n\n    return _possibleConstructorReturn(this, (ReactTypeformEmbed.__proto__ || Object.getPrototypeOf(ReactTypeformEmbed)).apply(this, arguments));\n  }\n\n  _createClass(ReactTypeformEmbed, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _props = this.props,\n          url = _props.url,\n          hideHeaders = _props.hideHeaders,\n          hideFooter = _props.hideFooter,\n          opacity = _props.opacity,\n          buttonText = _props.buttonText,\n          popup = _props.popup,\n          mode = _props.mode,\n          autoOpen = _props.autoOpen,\n          autoClose = _props.autoClose,\n          onSubmit = _props.onSubmit;\n\n      var options = {\n        hideHeaders: hideHeaders,\n        hideFooter: hideFooter,\n        opacity: opacity,\n        buttonText: buttonText,\n        mode: mode,\n        autoOpen: autoOpen,\n        autoClose: autoClose,\n        onSubmit: onSubmit\n\n        // Popup Mode\n      };if (popup) {\n\n        // Load Typeform embed popup\n        this.typeform = typeformEmbed.makePopup(url, options);\n\n        // Widget Mode (default)\n      } else {\n        var elm = this.typeformElm;\n\n        // Load Typeform embed widget\n        typeformEmbed.makeWidget(elm, url, options);\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var style = Object.assign({}, styleDefault, this.props.style);\n\n      return _react2.default.createElement('div', { className: 'ReactTypeformEmbed', ref: function ref(tf) {\n          return _this2.typeformElm = tf;\n        }, style: style });\n    }\n  }]);\n\n  return ReactTypeformEmbed;\n}(_react.Component);\n\nReactTypeformEmbed.propTypes = {\n  style: _propTypes2.default.object,\n  url: _propTypes2.default.string.isRequired,\n  popup: _propTypes2.default.bool,\n  hideHeaders: _propTypes2.default.bool,\n  hideFooter: _propTypes2.default.bool,\n\n  // Widget options\n  opacity: _propTypes2.default.number,\n  buttonText: _propTypes2.default.string,\n\n  // Popup options\n  mode: _propTypes2.default.string,\n  autoOpen: _propTypes2.default.bool,\n  autoClose: _propTypes2.default.number,\n  onSubmit: _propTypes2.default.func\n};\n\n// Default values taken from official Typeform docs\n// https://developer.typeform.com/embed/modes/\nReactTypeformEmbed.defaultProps = {\n  style: {},\n  url: '',\n  popup: false,\n  hideHeaders: false,\n  hideFooter: false,\n  onSubmit: function onSubmit() {},\n\n  // Widget options\n  opacity: 100,\n  buttonText: 'Start',\n\n  // Popup options\n  mode: \"popup\", // options: \"popup\", \"drawer_left\", \"drawer_right\"\n  autoOpen: false\n\n};\n\nexports.default = ReactTypeformEmbed;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ReactTypeformEmbed = require('./ReactTypeformEmbed');\n\nObject.defineProperty(exports, 'ReactTypeformEmbed', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ReactTypeformEmbed).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","import React from 'react'\r\nimport { ReactTypeformEmbed } from 'react-typeform-embed';\r\n\r\nclass Contact extends React.Component {\r\n  render() {\r\n    return <ReactTypeformEmbed url={'https://albertkim1.typeform.com/to/lfIu3'}/>\r\n  }\r\n}\r\n\r\nexport default Contact\r\n"],"mappingsfA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AAHA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}